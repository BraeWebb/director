#!/bin/bash

# echo "{\"score\": 100}" > /autograder/results/results.json

readonly G_LOG_I='[INFO]'
readonly G_LOG_W='[WARN]'
readonly G_LOG_E='[ERROR]'

launch_xvfb() {
    # Set defaults if the user did not specify envs.
    export DISPLAY=${XVFB_DISPLAY:-:1}
    local screen=${XVFB_SCREEN:-0}
    local resolution=${XVFB_RESOLUTION:-1280x1024x24}
    local timeout=${XVFB_TIMEOUT:-5}
    # Start and wait for either Xvfb to be fully up,
    # or we hit the timeout.
    Xvfb ${DISPLAY} -screen ${screen} ${resolution} &
    local loopCount=0
    until xdpyinfo -display ${DISPLAY} > /dev/null 2>&1
    do
        loopCount=$((loopCount+1))
        sleep 1
        if [ ${loopCount} -gt ${timeout} ]
        then
            echo "[ERROR] xvfb failed to start."
            exit 1
        fi
    done
}

launch_window_manager() {
    local timeout=${XVFB_TIMEOUT:-5}
    # Start and wait for either fluxbox to be fully up or we hit
    # the timeout.
    fluxbox &
    local loopCount=0
    until wmctrl -m > /dev/null 2>&1
    do
        loopCount=$((loopCount+1))
        sleep 1
        if [ ${loopCount} -gt ${timeout} ]
        then
            echo "${G_LOG_E} fluxbox failed to start."
            exit 1
        fi
    done
}

run_vnc_server() {
    local passwordArgument='-nopw'
    if [ -n "${VNC_SERVER_PASSWORD}" ]
    then
        local passwordFilePath="${HOME}/x11vnc.pass"
        if ! x11vnc -storepasswd "${VNC_SERVER_PASSWORD}" "${passwordFilePath}"
        then
            echo "[ERROR] Failed to store x11vnc password."
            exit 1
        fi
        passwordArgument=-"-rfbauth ${passwordFilePath}"
        echo "[INFO] The VNC server will ask for a password."
    else
        echo "[WARN] The VNC server will NOT ask for a password."
    fi
    x11vnc -display ${DISPLAY} -forever ${passwordArgument} &
    wait $!
}

launch_xvfb
# launch_window_manager
# run_vnc_server &

cd /autograder/source
python3.9 testrunner.py > /autograder/results/results.json

# xwd -root -display ${DISPLAY} | convert - /autograder/results/screenshotshot.png # | jp2a - --colors # | convert - jpg:- > /autograder/results/screenshot.jpg
# DISPLAY=${DISPLAY} shutter -a -o "/autograder/results/screenshot.png" -e
# sleep 0.5
# DISPLAY=${DISPLAY} import -window tk "/autograder/results/screenshot.png"
# xwininfo -tree -root

# curl -F "screenshot=@/autograder/results/screenshot.png" https://csse1001.uqcloud.net/screenshots/index.php
# xdotool getactivewindow
